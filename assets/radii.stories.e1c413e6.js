var i=Object.defineProperty;var n=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index.80f0ecd1.js";import{c as o,A as d,M as c}from"./Props.3c11b132.js";import"./jsx-runtime.97687b24.js";import"./iframe.db386123.js";import{T as u}from"./TokensGrid.cddae6fd.js";import{r as l}from"./index.bc1c0c18.js";import"./string.4da37388.js";import"./index.4f00bfd2.js";import"./es.map.constructor.ff57f392.js";import"./es.number.to-fixed.147685a4.js";function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)({}).hasOwnProperty.call(a,s)&&(e[s]=a[s])}return e},m.apply(null,arguments)}n(m,"_extends");const y={},g="wrapper";function p({components:e,...t}){return o(g,m({},y,t,{components:e,mdxType:"MDXLayout"}),o(c,{title:"Tokens/Radii",mdxType:"Meta"}),o("h1",null,"Radii"),o(u,{tokens:l,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Radii",includeStories:["__page"]},T={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>o(d,{mdxStoryNameToKey:T,mdxComponentAnnotations:r},o(p,null))};const v=["__page"];export{v as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=radii.stories.e1c413e6.js.map
